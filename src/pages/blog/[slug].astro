---
import Layout from '../../layouts/Layout.astro';
import Navigation from '../../components/Navigation.astro';
import BentoGrid from '../../components/BentoGrid.astro';
import BentoCard from '../../components/BentoCard.astro';
import ImagePlaceholder from '../../components/ImagePlaceholder.astro';

// In production, this would come from a CMS or markdown files
export async function getStaticPaths() {
  const posts = [
    {
      slug: 'building-modern-web-apps-2024',
      title: 'Building Modern Web Apps in 2024: A Complete Guide',
      excerpt: 'Explore the latest tools, frameworks, and best practices for building scalable web applications in 2024.',
      content: `
        <p>The landscape of web development continues to evolve at a rapid pace. In 2024, we're seeing significant shifts in how we build, deploy, and maintain modern web applications. This comprehensive guide will walk you through the essential tools, frameworks, and best practices that define modern web development today.</p>
        
        <h2>The Modern Stack</h2>
        <p>Today's web applications are built with a combination of powerful tools and frameworks that prioritize developer experience and performance. The modern stack typically includes:</p>
        
        <ul>
          <li><strong>TypeScript:</strong> Static typing has become the standard for large-scale applications</li>
          <li><strong>React/Vue/Angular:</strong> Component-based architectures dominate the frontend landscape</li>
          <li><strong>Next.js/Nuxt/SvelteKit:</strong> Meta-frameworks that handle routing, SSR, and optimization</li>
          <li><strong>Tailwind CSS:</strong> Utility-first CSS for rapid UI development</li>
          <li><strong>Vite/esbuild:</strong> Lightning-fast build tools that improve DX</li>
        </ul>
        
        <h2>Performance First</h2>
        <p>Performance is no longer an afterthought but a core requirement from day one. Modern applications implement:</p>
        
        <ul>
          <li>Code splitting and lazy loading</li>
          <li>Image optimization with next-gen formats</li>
          <li>Edge computing and CDN strategies</li>
          <li>Progressive enhancement</li>
          <li>Core Web Vitals optimization</li>
        </ul>
        
        <h2>Developer Experience</h2>
        <p>The tools we use today are designed to make developers more productive:</p>
        
        <blockquote>
          "A great developer experience leads to better products and happier teams."
        </blockquote>
        
        <p>Modern development environments include features like hot module replacement, intelligent code completion, and integrated debugging tools that significantly reduce the feedback loop.</p>
        
        <h2>The Rise of Full-Stack Frameworks</h2>
        <p>Frameworks like Next.js, Remix, and SvelteKit blur the lines between frontend and backend, offering:</p>
        
        <ul>
          <li>File-based routing</li>
          <li>API routes alongside UI components</li>
          <li>Built-in data fetching patterns</li>
          <li>Automatic code splitting</li>
          <li>Server-side rendering options</li>
        </ul>
        
        <h2>Conclusion</h2>
        <p>Building modern web applications in 2024 requires a thoughtful approach to tool selection, performance optimization, and developer experience. By leveraging the right combination of technologies and following best practices, we can create applications that are fast, maintainable, and delightful to use.</p>
      `,
      author: {
        name: 'Dorell James',
        bio: 'Full-stack developer and community organizer at JavaScript Cebu',
        avatar: 'üë®‚Äçüíª'
      },
      date: 'December 15, 2024',
      readTime: '8 min read',
      category: 'Tutorial',
      tags: ['React', 'TypeScript', 'Next.js', 'Web Development']
    },
    {
      slug: 'getting-started-with-typescript',
      title: 'Getting Started with TypeScript: A Beginner\'s Journey',
      excerpt: 'Learn the fundamentals of TypeScript and how it can improve your JavaScript development workflow.',
      content: '<p>TypeScript content...</p>',
      author: {
        name: 'Maria Santos',
        bio: 'Frontend developer passionate about type safety',
        avatar: 'üë©‚Äçüíª'
      },
      date: 'December 10, 2024',
      readTime: '5 min read',
      category: 'Tutorial',
      tags: ['TypeScript', 'JavaScript']
    },
    // Add more posts as needed
  ];
  
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { post } = Astro.props;

// Related posts (in production, these would be dynamically fetched)
const relatedPosts = [
  {
    slug: 'react-server-components',
    title: 'Understanding React Server Components',
    author: 'John Cruz',
    date: 'December 8, 2024',
    readTime: '10 min read',
    category: 'Deep Dive'
  },
  {
    slug: 'vue-composition-api',
    title: 'Mastering Vue 3 Composition API',
    author: 'Harlequin Doyon',
    date: 'December 5, 2024',
    readTime: '7 min read',
    category: 'Tutorial'
  },
  {
    slug: 'web-performance-optimization',
    title: 'Web Performance Optimization Techniques',
    author: 'Cyrus Hiyas',
    date: 'December 3, 2024',
    readTime: '6 min read',
    category: 'Performance'
  }
];
---

<Layout title={post.title} description={post.excerpt}>
  <Navigation />
  <main>
    <!-- Article Header -->
    <header class="article-header">
      <div class="container">
        <div class="header-content">
          <div class="breadcrumbs">
            <a href="/">Home</a>
            <span>/</span>
            <a href="/blog">Blog</a>
            <span>/</span>
            <span class="current">{post.category}</span>
          </div>
          
          <h1>{post.title}</h1>
          
          <div class="article-meta">
            <div class="author-section">
              <ImagePlaceholder width="48px" height="48px" pattern="circles">
                <span>{post.author.avatar}</span>
              </ImagePlaceholder>
              <div class="author-info">
                <span class="author-name">{post.author.name}</span>
                <div class="meta-details">
                  <span>{post.date}</span>
                  <span>‚Ä¢</span>
                  <span>{post.readTime}</span>
                </div>
              </div>
            </div>
            
            <div class="share-buttons">
              <button class="share-btn" aria-label="Share on Twitter">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </button>
              <button class="share-btn" aria-label="Share on LinkedIn">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                </svg>
              </button>
              <button class="share-btn" aria-label="Copy link">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
                  <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
                </svg>
              </button>
            </div>
          </div>
          
          <div class="tags">
            {post.tags.map(tag => (
              <a href={`/blog?tag=${tag.toLowerCase()}`} class="tag">{tag}</a>
            ))}
          </div>
        </div>
      </div>
    </header>

    <!-- Featured Image -->
    <section class="featured-image-section">
      <div class="container">
        <ImagePlaceholder height="500px" pattern="waves">
          <div class="image-placeholder">
            <span style="font-size: 4rem;">üìö</span>
          </div>
        </ImagePlaceholder>
      </div>
    </section>

    <!-- Article Content -->
    <article class="article-content">
      <div class="container">
        <div class="content-wrapper">
          <div class="article-body" set:html={post.content} />
          
          <!-- Author Bio -->
          <div class="author-bio">
            <ImagePlaceholder width="80px" height="80px" pattern="circles">
              <span style="font-size: 2rem;">{post.author.avatar}</span>
            </ImagePlaceholder>
            <div class="bio-content">
              <h3>About {post.author.name}</h3>
              <p>{post.author.bio}</p>
              <div class="author-links">
                <a href="#" class="author-link">Twitter</a>
                <a href="#" class="author-link">GitHub</a>
                <a href="#" class="author-link">LinkedIn</a>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Sidebar -->
        <aside class="article-sidebar">
          <div class="toc-card">
            <h3>Table of Contents</h3>
            <nav class="toc">
              <a href="#the-modern-stack">The Modern Stack</a>
              <a href="#performance-first">Performance First</a>
              <a href="#developer-experience">Developer Experience</a>
              <a href="#the-rise-of-full-stack-frameworks">The Rise of Full-Stack Frameworks</a>
              <a href="#conclusion">Conclusion</a>
            </nav>
          </div>
          
          <div class="newsletter-card">
            <h3>Get Updates</h3>
            <p>Subscribe to our newsletter for the latest tutorials and insights.</p>
            <form class="sidebar-newsletter">
              <input type="email" placeholder="Your email" required />
              <button type="submit">Subscribe</button>
            </form>
          </div>
        </aside>
      </div>
    </article>

    <!-- Related Posts -->
    <section class="related-section">
      <div class="container">
        <h2>Related Articles</h2>
        <BentoGrid>
          {relatedPosts.map(relatedPost => (
            <BentoCard class="col-span-2" href={`/blog/${relatedPost.slug}`}>
              <article class="related-card">
                <ImagePlaceholder height="150px" pattern="dots">
                  <span class="category-badge">{relatedPost.category}</span>
                </ImagePlaceholder>
                <div class="related-content">
                  <h3>{relatedPost.title}</h3>
                  <div class="related-meta">
                    <span>{relatedPost.author}</span>
                    <span>‚Ä¢</span>
                    <span>{relatedPost.readTime}</span>
                  </div>
                </div>
              </article>
            </BentoCard>
          ))}
        </BentoGrid>
      </div>
    </section>
  </main>
</Layout>

<style>
  /* Article Header */
  .article-header {
    padding: var(--space-2xl) 0;
    background: var(--color-bg-secondary);
    border-bottom: 1px solid var(--color-border);
  }

  .header-content {
    max-width: 900px;
    margin: 0 auto;
  }

  .breadcrumbs {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    margin-bottom: var(--space-lg);
    font-size: 0.875rem;
  }

  .breadcrumbs a {
    color: var(--color-text-secondary);
    transition: color var(--transition-fast);
  }

  .breadcrumbs a:hover {
    color: var(--color-yellow);
  }

  .breadcrumbs span {
    color: var(--color-text-tertiary);
  }

  .breadcrumbs .current {
    color: var(--color-yellow);
  }

  .article-header h1 {
    font-size: clamp(2rem, 5vw, 3.5rem);
    line-height: 1.2;
    margin-bottom: var(--space-xl);
  }

  .article-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-lg);
  }

  .author-section {
    display: flex;
    align-items: center;
    gap: var(--space-md);
  }

  .author-info {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .author-name {
    font-weight: 600;
    color: var(--color-text);
  }

  .meta-details {
    display: flex;
    gap: var(--space-sm);
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }

  .share-buttons {
    display: flex;
    gap: var(--space-sm);
  }

  .share-btn {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    color: var(--color-text-secondary);
    cursor: pointer;
    transition: all var(--transition-fast);
  }

  .share-btn:hover {
    background: var(--color-yellow);
    border-color: var(--color-yellow);
    color: var(--color-black);
    transform: translateY(-2px);
  }

  .tags {
    display: flex;
    gap: var(--space-sm);
    flex-wrap: wrap;
  }

  .tag {
    padding: 0.375rem 0.75rem;
    background: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-2xl);
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    transition: all var(--transition-fast);
  }

  .tag:hover {
    background: var(--color-yellow);
    border-color: var(--color-yellow);
    color: var(--color-black);
  }

  /* Featured Image */
  .featured-image-section {
    padding: var(--space-2xl) 0;
  }

  .image-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
  }

  /* Article Content */
  .article-content {
    padding: var(--space-3xl) 0;
  }

  .article-content .container {
    display: grid;
    grid-template-columns: 1fr 300px;
    gap: var(--space-3xl);
    align-items: start;
  }

  .content-wrapper {
    max-width: 750px;
  }

  /* Article Body Styles */
  .article-body {
    font-size: 1.125rem;
    line-height: 1.7;
    color: var(--color-text-secondary);
  }

  .article-body h2 {
    margin: var(--space-2xl) 0 var(--space-lg);
    font-size: 2rem;
    color: var(--color-text);
  }

  .article-body h3 {
    margin: var(--space-xl) 0 var(--space-md);
    font-size: 1.5rem;
    color: var(--color-text);
  }

  .article-body p {
    margin-bottom: var(--space-lg);
  }

  .article-body ul,
  .article-body ol {
    margin-bottom: var(--space-lg);
    padding-left: var(--space-xl);
  }

  .article-body li {
    margin-bottom: var(--space-sm);
  }

  .article-body blockquote {
    margin: var(--space-xl) 0;
    padding: var(--space-lg);
    background: var(--color-bg-secondary);
    border-left: 4px solid var(--color-yellow);
    font-style: italic;
    font-size: 1.25rem;
  }

  .article-body code {
    padding: 0.125rem 0.375rem;
    background: var(--color-bg-tertiary);
    border-radius: var(--radius-sm);
    font-family: var(--font-mono);
    font-size: 0.875em;
  }

  .article-body pre {
    margin: var(--space-xl) 0;
    padding: var(--space-lg);
    background: var(--color-bg-tertiary);
    border-radius: var(--radius-lg);
    overflow-x: auto;
  }

  .article-body pre code {
    padding: 0;
    background: transparent;
  }

  .article-body a {
    color: var(--color-yellow);
    text-decoration: underline;
    text-underline-offset: 0.2em;
    transition: color var(--transition-fast);
  }

  .article-body a:hover {
    color: var(--color-yellow-dark);
  }

  /* Author Bio */
  .author-bio {
    display: flex;
    gap: var(--space-lg);
    margin-top: var(--space-3xl);
    padding: var(--space-xl);
    background: var(--color-bg-secondary);
    border-radius: var(--radius-lg);
  }

  .bio-content h3 {
    margin-bottom: var(--space-sm);
  }

  .bio-content p {
    color: var(--color-text-secondary);
    margin-bottom: var(--space-md);
  }

  .author-links {
    display: flex;
    gap: var(--space-md);
  }

  .author-link {
    color: var(--color-yellow);
    font-size: 0.875rem;
    font-weight: 500;
  }

  /* Sidebar */
  .article-sidebar {
    position: sticky;
    top: calc(4rem + var(--space-xl));
  }

  .toc-card,
  .newsletter-card {
    padding: var(--space-lg);
    background: var(--color-bg-secondary);
    border-radius: var(--radius-lg);
    margin-bottom: var(--space-lg);
  }

  .toc-card h3,
  .newsletter-card h3 {
    margin-bottom: var(--space-md);
    font-size: 1.125rem;
  }

  .toc {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
  }

  .toc a {
    padding: var(--space-xs) 0;
    color: var(--color-text-secondary);
    font-size: 0.875rem;
    border-left: 2px solid transparent;
    padding-left: var(--space-md);
    transition: all var(--transition-fast);
  }

  .toc a:hover {
    color: var(--color-yellow);
    border-color: var(--color-yellow);
  }

  .newsletter-card p {
    font-size: 0.875rem;
    color: var(--color-text-secondary);
    margin-bottom: var(--space-md);
  }

  .sidebar-newsletter {
    display: flex;
    flex-direction: column;
    gap: var(--space-sm);
  }

  .sidebar-newsletter input {
    padding: 0.625rem 1rem;
    background: var(--color-bg);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-md);
    font-size: 0.875rem;
    color: var(--color-text);
  }

  .sidebar-newsletter input:focus {
    outline: none;
    border-color: var(--color-yellow);
  }

  .sidebar-newsletter button {
    padding: 0.625rem 1rem;
    background: var(--color-yellow);
    color: var(--color-black);
    border: none;
    border-radius: var(--radius-md);
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-fast);
  }

  .sidebar-newsletter button:hover {
    background: var(--color-yellow-dark);
    transform: translateY(-2px);
  }

  /* Related Section */
  .related-section {
    padding: var(--space-3xl) 0;
    background: var(--color-bg-secondary);
  }

  .related-section h2 {
    margin-bottom: var(--space-2xl);
    font-size: 2rem;
  }

  .related-card {
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .category-badge {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding: 0.375rem 0.75rem;
    background: var(--color-bg);
    border-radius: var(--radius-md);
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    box-shadow: var(--shadow-md);
  }

  .related-content {
    padding: var(--space-md) 0;
  }

  .related-content h3 {
    margin-bottom: var(--space-sm);
    font-size: 1.125rem;
    line-height: 1.3;
  }

  .related-meta {
    display: flex;
    gap: var(--space-sm);
    font-size: 0.875rem;
    color: var(--color-text-secondary);
  }

  /* Responsive */
  @media (max-width: 1024px) {
    .article-content .container {
      grid-template-columns: 1fr;
    }

    .article-sidebar {
      display: none;
    }
  }

  @media (max-width: 768px) {
    .article-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-lg);
    }

    .author-bio {
      flex-direction: column;
      text-align: center;
    }

    .bio-content {
      display: flex;
      flex-direction: column;
      align-items: center;
    }
  }
</style>

<script>
  // Copy link functionality
  const copyLinkBtn = document.querySelector('.share-btn[aria-label="Copy link"]');
  copyLinkBtn?.addEventListener('click', () => {
    navigator.clipboard.writeText(window.location.href);
    // In production, show a toast notification
    console.log('Link copied to clipboard!');
  });

  // Share functionality
  const twitterBtn = document.querySelector('.share-btn[aria-label="Share on Twitter"]');
  twitterBtn?.addEventListener('click', () => {
    const text = document.querySelector('h1')?.textContent || '';
    const url = window.location.href;
    window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`, '_blank');
  });

  const linkedinBtn = document.querySelector('.share-btn[aria-label="Share on LinkedIn"]');
  linkedinBtn?.addEventListener('click', () => {
    const url = window.location.href;
    window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`, '_blank');
  });
</script>